PREFIX ragno: <http://purl.org/stuff/ragno/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX olo: <http://purl.org/ontology/olo/core#>
PREFIX semem: <http://purl.org/stuff/semem/>

# Extract document structure with chunks (updated for actual data structure)
# Updated to work with ragno:Unit+ragno:TextElement chunks derived from interactions
CONSTRUCT {
    ?document rdf:type semem:Interaction ;
              rdfs:label ?documentTitle ;
              semem:prompt ?prompt ;
              semem:output ?output ;
              dcterms:created ?documentCreated ;
              ragno:hasChunks ?chunkCount ;
              ragno:processingStage "chunked" .
    
    ?chunk rdf:type ragno:Unit ;
           rdf:type ragno:TextElement ;
           rdfs:label ?chunkLabel ;
           ragno:content ?chunkContent ;
           ragno:belongsToDocument ?document ;
           prov:wasDerivedFrom ?document ;
           olo:index ?chunkIndex ;
           ragno:hasEmbedding ?embedding ;
           dcterms:extent ?chunkSize ;
           dcterms:created ?chunkCreated .
}
WHERE {
    GRAPH ?g {
        # Find chunks (ragno:Unit + ragno:TextElement)
        ?chunk a ragno:Unit, ragno:TextElement ;
               prov:wasDerivedFrom ?document .
        
        # Chunk properties
        OPTIONAL { ?chunk rdfs:label ?chunkLabel }
        OPTIONAL { ?chunk ragno:content ?chunkContent }
        OPTIONAL { ?chunk olo:index ?chunkIndex }
        OPTIONAL { ?chunk ragno:hasEmbedding ?embedding }
        OPTIONAL { ?chunk dcterms:extent ?chunkSize }
        OPTIONAL { ?chunk dcterms:created ?chunkCreated }
        
        # Document properties (if it's an interaction)
        OPTIONAL { ?document semem:prompt ?prompt }
        OPTIONAL { ?document semem:output ?output }
        OPTIONAL { ?document semem:id ?documentTitle }
        OPTIONAL { ?document dcterms:created ?documentCreated }
        
        # Count chunks for this document
        {
            SELECT ?document (COUNT(DISTINCT ?ch) AS ?chunkCount)
            WHERE {
                ?ch a ragno:Unit, ragno:TextElement ;
                    prov:wasDerivedFrom ?document .
            }
            GROUP BY ?document
        }
    }
}
ORDER BY ?documentCreated ?chunkCreated