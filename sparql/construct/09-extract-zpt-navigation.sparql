PREFIX ragno: <http://purl.org/stuff/ragno/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX zpt: <http://purl.org/zpt/>
PREFIX semem: <http://purl.org/stuff/semem/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

# Extract ZPT (Zoom-Pan-Tilt) navigation structures (updated for actual data structure)
# Creates multi-dimensional navigation view of knowledge space based on interactions, chunks, concepts, elements
CONSTRUCT {
    # ZPT Zoom Levels (abstraction hierarchy)
    ?zoomLevel rdf:type zpt:ZoomLevel ;
               rdfs:label ?zoomLabel ;
               zpt:abstraction ?abstraction ;
               zpt:hasElements ?elementCount ;
               zpt:levelOrder ?order ;
               zpt:description ?zoomDescription .
    
    # ZPT Pan Domains (content filtering)
    ?panDomain rdf:type zpt:PanDomain ;
               rdfs:label ?panLabel ;
               zpt:domainType ?domainType ;
               zpt:keywords ?keywords ;
               zpt:hasContent ?contentCount ;
               zpt:description ?panDescription .
    
    # ZPT Tilt Perspectives (view styles)
    ?tiltView rdf:type zpt:TiltPerspective ;
              rdfs:label ?tiltLabel ;
              zpt:viewType ?viewType ;
              zpt:projection ?projection ;
              zpt:description ?tiltDescription .
    
    # Content elements with ZPT coordinates
    ?element zpt:zoomLevel ?elementZoom ;
             zpt:panDomain ?elementPan ;
             zpt:tiltView ?elementTilt ;
             zpt:navigationScore ?navScore ;
             zpt:discoverability ?discoverability ;
             zpt:coordinates ?coordinates .
    
    # ZPT Navigation paths
    ?navPath rdf:type zpt:NavigationPath ;
             zpt:fromZoom ?fromZoom ;
             zpt:toZoom ?toZoom ;
             zpt:panFilter ?panFilter ;
             zpt:tiltProjection ?tiltProjection ;
             zpt:pathWeight ?pathWeight ;
             zpt:pathDescription ?pathDescription .
}
WHERE {
    GRAPH <${graphURI}> {
        # Define ZPT Zoom Levels based on actual data structure
        VALUES (?abstraction ?zoomLabel ?order ?zoomDescription) {
            ("corpus" "Corpus Level - Complete Knowledge Base" 1 "Overview of entire semantic knowledge base")
            ("interaction" "Interaction Level - User Conversations" 2 "Individual semem:Interaction instances with prompts and outputs")
            ("chunk" "Chunk Level - Text Decomposition" 3 "ragno:Unit + ragno:TextElement chunks derived from interactions")
            ("concept" "Concept Level - Extracted Concepts" 4 "skos:Concept instances linked to interactions")
            ("element" "Element Level - Enhanced Knowledge" 5 "ragno:Element instances with processing and connections")
        }
        
        BIND(IRI(CONCAT("http://purl.org/zpt/zoom-", ?abstraction)) AS ?zoomLevel)
        
        # Define ZPT Pan Domains based on actual content
        VALUES (?domainType ?panLabel ?keywords ?panDescription) {
            ("content-type" "Content Type Domain" "interaction,chunk,concept,element" "Filter by RDF type and processing stage")
            ("semantic" "Semantic Domain" "music,songwriting,lyrics,visualization" "Filter by semantic content themes")
            ("temporal" "Temporal Domain" "recent,created,timestamp,sequence" "Filter by creation time and temporal relationships")
            ("connectivity" "Connectivity Domain" "connectsTo,wasDerivedFrom,hasEmbedding" "Filter by relationship patterns and connectivity")
        }
        
        BIND(IRI(CONCAT("http://purl.org/zpt/pan-", ?domainType)) AS ?panDomain)
        
        # Define ZPT Tilt Perspectives based on actual data views
        VALUES (?viewType ?tiltLabel ?projection ?tiltDescription) {
            ("textual" "Textual View - Content and Labels" "textual" "Text-based exploration via ragno:content and labels")
            ("vector" "Vector View - Embedding Space" "vectorial" "Vector similarity via embeddings (1536-dimensional)")
            ("graph" "Graph View - Connection Networks" "topological" "Network topology via ragno:connectsTo relationships")
            ("temporal" "Temporal View - Time Sequences" "chronological" "Timeline view via timestamps and derivation chains")
        }
        
        BIND(IRI(CONCAT("http://purl.org/zpt/tilt-", ?viewType)) AS ?tiltView)
        
        # Assign elements to ZPT coordinates
        OPTIONAL {
            # Get all content-bearing elements
            {
                ?element a semem:Interaction .
                BIND("interaction" AS ?elementType)
                OPTIONAL { ?element semem:prompt ?content }
            }
            UNION {
                ?element a ragno:Unit, ragno:TextElement .
                BIND("chunk" AS ?elementType)
                OPTIONAL { ?element ragno:content ?content }
            }
            UNION {
                ?element a skos:Concept .
                BIND("concept" AS ?elementType)
                OPTIONAL { ?element skos:prefLabel ?content }
                OPTIONAL { ?element ragno:content ?content }
            }
            UNION {
                ?element a ragno:Element .
                BIND("element" AS ?elementType)
                OPTIONAL { ?element rdfs:label ?content }
                OPTIONAL { ?element ragno:content ?content }
            }
            
            # Determine Zoom Level
            BIND(
                IF(?elementType = "interaction",
                   IRI("http://purl.org/zpt/zoom-interaction"),
                   IF(?elementType = "chunk",
                      IRI("http://purl.org/zpt/zoom-chunk"),
                      IF(?elementType = "concept",
                         IRI("http://purl.org/zpt/zoom-concept"),
                         IRI("http://purl.org/zpt/zoom-element")))) AS ?elementZoom
            )
            
            # Determine Pan Domain based on content
            BIND(
                IF(BOUND(?content) && (CONTAINS(LCASE(?content), "music") || CONTAINS(LCASE(?content), "song") || CONTAINS(LCASE(?content), "lyric")),
                   IRI("http://purl.org/zpt/pan-semantic"),
                   IF(?elementType = "interaction" || ?elementType = "chunk",
                      IRI("http://purl.org/zpt/pan-content-type"),
                      IRI("http://purl.org/zpt/pan-connectivity"))) AS ?elementPan
            )
            
            # Determine Tilt View based on available properties
            OPTIONAL { ?element ragno:hasEmbedding ?hasEmb }
            OPTIONAL { ?element semem:embedding ?semEmb }
            OPTIONAL { ?element ragno:connectsTo ?connects }
            OPTIONAL { ?element dcterms:created ?created }
            
            BIND(
                IF(BOUND(?hasEmb) || BOUND(?semEmb),
                   IRI("http://purl.org/zpt/tilt-vector"),
                   IF(BOUND(?connects),
                      IRI("http://purl.org/zpt/tilt-graph"),
                      IF(BOUND(?created),
                         IRI("http://purl.org/zpt/tilt-temporal"),
                         IRI("http://purl.org/zpt/tilt-textual")))) AS ?elementTilt
            )
            
            # Calculate navigation score
            BIND(
                (IF(BOUND(?hasEmb) || BOUND(?semEmb), 2.0, 0.0) +
                 IF(BOUND(?content) && STRLEN(?content) > 10, 1.0, 0.0) +
                 IF(BOUND(?connects), 1.0, 0.0) +
                 IF(BOUND(?created), 0.5, 0.0) +
                 IF(?elementType = "interaction", 1.0, 0.0)) AS ?navScore
            )
            
            # Calculate discoverability
            BIND(
                IF(?navScore >= 3.0, "high",
                   IF(?navScore >= 1.5, "medium", "low")) AS ?discoverability
            )
            
            # Create coordinate string
            BIND(CONCAT("Z:", ?elementType, " P:", SUBSTR(STR(?elementPan), 30), " T:", SUBSTR(STR(?elementTilt), 29)) AS ?coordinates)
        }
        
        # Count elements per zoom level
        {
            SELECT ?zoomLevel ?abstraction (COUNT(?el) AS ?elementCount) WHERE {
                OPTIONAL {
                    {
                        ?el a semem:Interaction .
                        FILTER(?abstraction = "interaction")
                    }
                    UNION {
                        ?el a ragno:Unit, ragno:TextElement .
                        FILTER(?abstraction = "chunk")
                    }
                    UNION {
                        ?el a skos:Concept .
                        FILTER(?abstraction = "concept")
                    }
                    UNION {
                        ?el a ragno:Element .
                        FILTER(?abstraction = "element")
                    }
                }
            }
            GROUP BY ?zoomLevel ?abstraction
        }
        
        # Count content per pan domain
        {
            SELECT ?panDomain ?domainType (COUNT(?ct) AS ?contentCount) WHERE {
                OPTIONAL {
                    {
                        ?ct a semem:Interaction .
                        FILTER(?domainType = "content-type")
                    }
                    UNION {
                        ?ct ragno:content ?ctContent .
                        FILTER(?domainType = "semantic" && (
                            CONTAINS(LCASE(?ctContent), "music") ||
                            CONTAINS(LCASE(?ctContent), "song") ||
                            CONTAINS(LCASE(?ctContent), "lyric")
                        ))
                    }
                    UNION {
                        ?ct dcterms:created ?created .
                        FILTER(?domainType = "temporal")
                    }
                    UNION {
                        ?ct ragno:connectsTo ?connection .
                        FILTER(?domainType = "connectivity")
                    }
                }
            }
            GROUP BY ?panDomain ?domainType
        }
        
        # Create navigation paths between zoom levels
        OPTIONAL {
            VALUES (?fromLevel ?toLevel ?pathWeight ?pathDescription) {
                ("corpus" "interaction" 0.9 "Navigate from overview to specific interactions")
                ("interaction" "chunk" 0.8 "Drill down from interactions to text chunks")
                ("chunk" "concept" 0.7 "Focus from chunks to extracted concepts")
                ("concept" "element" 0.6 "Zoom into enhanced knowledge elements")
            }
            
            BIND(IRI(CONCAT("http://purl.org/zpt/zoom-", ?fromLevel)) AS ?fromZoom)
            BIND(IRI(CONCAT("http://purl.org/zpt/zoom-", ?toLevel)) AS ?toZoom)
            
            BIND(IRI(CONCAT("http://purl.org/zpt/path-", ?fromLevel, "-to-", ?toLevel)) AS ?navPath)
            
            BIND(IRI("http://purl.org/zpt/pan-semantic") AS ?panFilter)
            BIND(IRI("http://purl.org/zpt/tilt-vector") AS ?tiltProjection)
        }
    }
}
ORDER BY ?order ?domainType ?viewType