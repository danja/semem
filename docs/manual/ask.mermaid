graph TD
    %% Ask Operation Information Flow - Current Architecture
    %% HTTP Entry Points
    A[Client Request] -->|POST /ask| B["HTTP Server<br/>mcp/http-server.js:537"]
    A -->|POST /api/ask| C["Workbench UI API<br/>src/frontend/js/api/api.js"]
    
    %% Request Processing
    B --> D["Simple Verbs Service<br/>mcp/tools/simple-verbs.js:ask()"]
    C --> D
    
    %% Question Validation & Processing
    D --> E["Question Validation<br/>Check required question field"]
    E --> F["Hybrid Context Manager<br/>src/services/context/HybridContextManager.js:processQuery()"]
    
    %% Context Processing Pipeline
    F --> G["Initialize Session<br/>Create/retrieve session cache"]
    G --> H["Concurrent Search Launch<br/>Local context + Enhancement search"]
    
    %% Local Context Search Branch
    H --> I["Adaptive Search Engine<br/>src/services/search/AdaptiveSearchEngine.js:executeAdaptiveSearch()"]
    I --> J["Generate Query Embedding<br/>SafeOperations.generateEmbedding()"]
    J -->|API Call| K["External Embedding Service<br/>Nomic API / Ollama nomic-embed-text"]
    K -->|1536-dim Vector| J
    
    %% Multi-Pass Search Execution
    J --> L["Context-Aware Threshold Calculator<br/>Calculate initial thresholds by zoom level"]
    L --> M["Multi-Pass Search Loop<br/>Progressive threshold relaxation"]
    M --> N["Search Pass Execution<br/>Call SafeOperations.searchSimilar()"]
    
    %% Safe Operations Search
    N --> O["Memory Manager<br/>src/MemoryManager.js:retrieveRelevantInteractions()"]
    O --> P["Dual Store Search<br/>FAISS Index + SPARQL Store"]
    
    %% SPARQL Similarity Search
    P --> Q["SPARQL Store Search<br/>src/stores/SPARQLStore.js:search()"]
    Q --> R["SPARQL Query Generation<br/>Support multiple RDF patterns"]
    R --> S["Similarity Query Execution<br/>Cosine similarity calculation"]
    S -->|HTTP POST| T["Fuseki SPARQL Endpoint<br/>localhost:4050/semem/sparql"]
    T --> U["Vector Similarity Results<br/>semem:Interaction matches"]
    
    %% FAISS Index Search
    P --> V["Memory Store Search<br/>FAISS index similarity search"]
    V --> W["Vector Search Results<br/>Top-K nearest neighbors"]
    
    %% Result Processing & Quality Assessment
    U --> X["Combine Search Results<br/>Merge SPARQL + FAISS results"]
    W --> X
    X --> Y["Result Quality Scoring<br/>AdaptiveSearchEngine._calculateResultQuality()"]
    Y --> Z["Quality Threshold Filtering<br/>config/preferences.js SEARCH_CONFIG.QUALITY"]
    
    %% Configuration-Driven Filtering
    AA["Configuration<br/>config/preferences.js"] --> Z
    AA --> L
    AA --> S
    
    %% Multi-Pass Search Control
    Z --> BB["Stopping Criteria Evaluation<br/>Quality/quantity thresholds"]
    BB --> CC{Continue<br/>Search?}
    CC -->|Yes| DD["Relax Thresholds<br/>Next search pass"]
    DD --> M
    CC -->|No| EE["Result Optimization<br/>Final quality sorting & limiting"]
    
    %% Context Synthesis
    EE --> FF["Context Merging<br/>HybridContextManager._mergeContexts()"]
    FF --> GG["Strategy Selection<br/>personal_only/enhanced/no_context"]
    GG --> HH["LLM Prompt Generation<br/>Create synthesis prompt with context"]
    
    %% Response Generation
    HH --> II["LLM Handler<br/>src/handlers/LLMHandler.js:generateResponse()"]
    II -->|API Call| JJ["External LLM Service<br/>Mistral API / Ollama qwen2:1.5b"]
    JJ -->|Generated Answer| II
    
    %% Session & Performance Tracking
    II --> KK["Session Cache Update<br/>Update interaction counts, embeddings"]
    KK --> LL["Context Analysis<br/>Calculate relevance scores, strategy used"]
    LL --> MM["ZPT State Management<br/>zoom/pan/tilt state tracking"]
    
    %% Response Assembly
    MM --> NN["Success Response Assembly<br/>answer, contextItems, memories, analysis"]
    NN --> OO["Performance Metrics<br/>Search method, timing, session stats"]
    OO --> PP["HTTP Response<br/>200 OK with comprehensive results"]
    
    %% Enhancement Search Branch (Parallel)
    H --> QQ["Enhancement Context Search<br/>Future: external knowledge integration"]
    QQ --> RR["Enhancement Results<br/>Currently returns empty/disabled"]
    RR --> FF
    
    %% Error Handling Paths
    J --> SS{Embedding<br/>Generation Failed?}
    SS -->|Yes| TT["Error Response<br/>Failed to generate query embedding"]
    
    N --> UU{Search<br/>Execution Failed?}
    UU -->|Yes| VV["Fallback Search<br/>Simple search with relaxed parameters"]
    VV --> X
    
    II --> WW{LLM Response<br/>Generation Failed?}
    WW -->|Yes| XX["Error Response<br/>Failed to generate answer"]
    
    S --> YY{SPARQL<br/>Query Failed?}
    YY -->|Yes| ZZ["Partial Results<br/>Use FAISS results only"]
    ZZ --> X
    
    %% No Context Found Path
    EE --> AAA{Context<br/>Found?}
    AAA -->|No| BBB["No Context Strategy<br/>Generate answer without context"]
    BBB --> II
    AAA -->|Yes| FF
    
    %% Styling
    classDef http fill:#e1f5fe,stroke:#0277bd
    classDef processing fill:#f3e5f5,stroke:#7b1fa2
    classDef search fill:#e8f5e8,stroke:#388e3c
    classDef external fill:#ffcdd2,stroke:#d32f2f
    classDef config fill:#fff3e0,stroke:#f57c00
    classDef error fill:#ffebee,stroke:#c62828
    classDef response fill:#e0f2f1,stroke:#00695c
    classDef decision fill:#fffde7,stroke:#ff8f00
    
    class A,B,C,PP http
    class D,E,F,G,H,I,L,M,N,O,FF,GG,HH,KK,LL,MM,NN,OO processing
    class P,Q,R,S,V,W,X,Y,Z,EE search
    class K,JJ,T external
    class AA config
    class SS,TT,UU,VV,WW,XX,YY,ZZ error
    class NN,OO,PP response
    class CC,AAA,BB decision