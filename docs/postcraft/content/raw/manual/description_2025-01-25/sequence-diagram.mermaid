sequenceDiagram
    participant C as Client
    participant WS as WebSocketServer
    participant MQ as MessageQueue
    participant H as HTTPServer
    participant R as APIRegistry
    participant S as Storage

    C->>H: Connect (HTTP/WS)
    activate H
    H->>R: Get API Instance
    R-->>H: API Instance
    H->>WS: Initialize WS Connection
    WS->>MQ: Initialize Queue
    WS-->>C: Connection Established
    deactivate H

    Note over C,WS: Subscribe to Topics

    C->>WS: Subscribe(topic)
    WS->>MQ: Register Subscription
    MQ-->>WS: Confirmation
    WS-->>C: Subscribed

    Note over C,S: Memory Operations

    C->>H: Store Interaction
    activate H
    H->>R: Get Storage API
    R-->>H: Storage Instance
    H->>S: Store Data
    S-->>H: Success
    H->>WS: Notify Update
    WS->>MQ: Queue Update
    MQ-->>WS: Queued
    WS->>C: Broadcast Update
    H-->>C: Store Success
    deactivate H

    Note over C,MQ: Offline Handling

    C->>WS: Disconnect
    WS->>MQ: Mark Offline
    
    H->>WS: Broadcast Update
    WS->>MQ: Queue for Offline Client
    
    C->>WS: Reconnect
    WS->>MQ: Get Queued Messages
    MQ-->>WS: Queued Updates
    WS->>C: Deliver Updates