openapi: 3.0.3
info:
  title: Semem API
  description: Semantic Memory APIs for intelligent agent memory management
  version: 1.0.0
  license:
    name: MIT

servers:
  - url: https://api.example.com/v1
    description: Production server
  - url: http://localhost:3000/v1
    description: Development server

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
      required:
        - error

    Memory:
      type: object
      properties:
        id:
          type: string
          format: uuid
        prompt:
          type: string
        output:
          type: string
        concepts:
          type: array
          items:
            type: string
        timestamp:
          type: integer
          format: int64
        accessCount:
          type: integer
        similarity:
          type: number
          format: float
      required:
        - id
        - prompt
        - output

    EmbeddingResult:
      type: object
      properties:
        embedding:
          type: array
          items:
            type: number
        model:
          type: string
        dimension:
          type: integer
      required:
        - embedding
        - dimension

    ConceptResult:
      type: object
      properties:
        concepts:
          type: array
          items:
            type: string
        text:
          type: string
      required:
        - concepts

    ChatResponse:
      type: object
      properties:
        response:
          type: string
        memoryIds:
          type: array
          items:
            type: string
            format: uuid
        conversationId:
          type: string
          format: uuid
      required:
        - response

    SearchResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Memory'
        count:
          type: integer
      required:
        - results
        - count

security:
  - ApiKeyAuth: []

paths:
  /memory:
    post:
      summary: Store an interaction in memory
      description: Stores a prompt/response pair with associated metadata in semantic memory
      operationId: storeMemory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The user input or query
                response:
                  type: string
                  description: The response or answer
                metadata:
                  type: object
                  description: Additional metadata for the interaction
              required:
                - prompt
                - response
      responses:
        '201':
          description: Memory stored successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  success:
                    type: boolean
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /memory/search:
    get:
      summary: Search memory based on semantic similarity
      description: Retrieves memories that are semantically similar to the query
      operationId: searchMemory
      parameters:
        - name: query
          in: query
          description: Text to search for in memory
          required: true
          schema:
            type: string
        - name: threshold
          in: query
          description: Similarity threshold (0.0-1.0)
          required: false
          schema:
            type: number
            minimum: 0
            maximum: 1
            default: 0.7
        - name: limit
          in: query
          description: Maximum number of results to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /memory/embedding:
    post:
      summary: Generate an embedding vector for text
      description: Creates a vector embedding representation of the provided text
      operationId: generateEmbedding
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Text to generate embedding for
                model:
                  type: string
                  description: Embedding model to use (default model will be used if not specified)
              required:
                - text
      responses:
        '200':
          description: Generated embedding
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingResult'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /memory/concepts:
    post:
      summary: Extract concepts from text
      description: Analyzes text to extract key concepts using LLM
      operationId: extractConcepts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Text to extract concepts from
              required:
                - text
      responses:
        '200':
          description: Extracted concepts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptResult'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /chat:
    post:
      summary: Generate a chat response using memory
      description: Generates a response to a prompt, using semantic memory for context
      operationId: generateChatResponse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The user input or query
                conversationId:
                  type: string
                  format: uuid
                  description: Optional ID to maintain conversation history
                useMemory:
                  type: boolean
                  description: Whether to use memory for context
                  default: true
                temperature:
                  type: number
                  description: Temperature for response generation (0.0-2.0)
                  minimum: 0
                  maximum: 2
                  default: 0.7
              required:
                - prompt
      responses:
        '200':
          description: Generated response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /chat/stream:
    post:
      summary: Stream a chat response using memory
      description: Streams a response to a prompt, using semantic memory for context
      operationId: streamChatResponse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: The user input or query
                conversationId:
                  type: string
                  format: uuid
                  description: Optional ID to maintain conversation history
                useMemory:
                  type: boolean
                  description: Whether to use memory for context
                  default: true
                temperature:
                  type: number
                  description: Temperature for response generation (0.0-2.0)
                  minimum: 0
                  maximum: 2
                  default: 0.7
              required:
                - prompt
      responses:
        '200':
          description: Streamed response
          content:
            text/event-stream:
              schema:
                type: string
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /search:
    get:
      summary: Search content using semantic similarity
      description: Performs semantic search over indexed content
      operationId: searchContent
      parameters:
        - name: query
          in: query
          description: Text to search for
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of results to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 5
        - name: types
          in: query
          description: Content types to include in search (comma-separated)
          required: false
          schema:
            type: string
        - name: threshold
          in: query
          description: Similarity threshold (0.0-1.0)
          required: false
          schema:
            type: number
            minimum: 0
            maximum: 1
            default: 0.7
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        content:
                          type: string
                        similarity:
                          type: number
                        type:
                          type: string
                        metadata:
                          type: object
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /index:
    post:
      summary: Index content for search
      description: Adds content to the search index with embeddings
      operationId: indexContent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: Content to index
                type:
                  type: string
                  description: Type of content (article, document, etc.)
                title:
                  type: string
                  description: Title of the content
                metadata:
                  type: object
                  description: Additional metadata for the content
              required:
                - content
                - type
      responses:
        '201':
          description: Content indexed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  success:
                    type: boolean
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'