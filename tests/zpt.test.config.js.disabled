/**
 * ZPT Test Configuration
 * Specialized configuration for ZPT integration and performance tests
 */
import { defineConfig } from 'vitest/config';
import path from 'path';

export default defineConfig({
  test: {
    // Test file patterns
    include: [
      'tests/unit/stores/SPARQLStore.enhanced.spec.js',
      'tests/integration/zpt/**/*.spec.js',
      'tests/performance/zpt/**/*.spec.js'
    ],
    
    // Test environment
    environment: 'node',
    
    // Global settings
    globals: true,
    
    // Timeout settings for performance tests
    testTimeout: 30000, // 30 seconds for performance tests
    hookTimeout: 10000, // 10 seconds for setup/teardown
    
    // Coverage settings
    coverage: {
      provider: 'v8',
      reporter: ['text', 'json', 'html'],
      reportsDirectory: './coverage/zpt',
      include: [
        'src/stores/SPARQLStore.js',
        'src/zpt/**/*.js',
        'mcp/tools/zpt-tools.js'
      ],
      exclude: [
        'tests/**',
        'node_modules/**',
        'docs/**'
      ],
      thresholds: {
        global: {
          statements: 70,
          branches: 65,
          functions: 70,
          lines: 70
        }
      }
    },
    
    // Performance test settings
    benchmark: {
      include: ['tests/performance/zpt/**/*.spec.js'],
      reporters: ['default', 'json']
    },
    
    // Setup files
    setupFiles: [
      './tests/setup/zpt-test-setup.js'
    ],
    
    // Reporters
    reporters: ['verbose', 'json'],
    outputFile: {
      json: './test-results/zpt-results.json'
    },
    
    // Pool options for performance testing
    pool: 'threads',
    poolOptions: {
      threads: {
        maxThreads: 4,
        minThreads: 1
      }
    }
  },
  
  // Module resolution
  resolve: {
    alias: {
      '@': path.resolve(__dirname, './src'),
      '@tests': path.resolve(__dirname, './tests'),
      '@mcp': path.resolve(__dirname, './mcp')
    }
  },
  
  // Define global variables for tests
  define: {
    __TEST_ENV__: JSON.stringify('zpt-testing'),
    __ENABLE_PERFORMANCE_LOGGING__: true
  }
});