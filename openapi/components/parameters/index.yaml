# Common Query Parameters
QueryParam:
  name: query
  in: query
  required: true
  description: Search query text
  schema:
    type: string
    minLength: 1
    maxLength: 1000
  example: "machine learning algorithms"

LimitParam:
  name: limit
  in: query
  required: false
  description: Maximum number of results to return
  schema:
    type: integer
    minimum: 1
    maximum: 100
    default: 10
  example: 5

ThresholdParam:
  name: threshold
  in: query
  required: false
  description: Similarity threshold for filtering results
  schema:
    type: number
    format: float
    minimum: 0
    maximum: 100
    default: 40
  example: 70

# Memory API Parameters
MemoryQueryParam:
  name: query
  in: query
  required: true
  description: Memory search query
  schema:
    type: string
    minLength: 1
    maxLength: 1000
  examples:
    simple:
      summary: Simple query
      value: "neural networks"
    complex:
      summary: Complex query
      value: "artificial intelligence machine learning algorithms"

MemoryThresholdParam:
  name: threshold
  in: query
  required: false
  description: Similarity threshold (0-100 scale, higher = more strict)
  schema:
    type: number
    format: float
    minimum: 0
    maximum: 100
    default: 40
  example: 60

MemoryLimitParam:
  name: limit
  in: query
  required: false
  description: Maximum number of memory interactions to return
  schema:
    type: integer
    minimum: 1
    maximum: 50
    default: 10
  example: 5

# Search API Parameters
SearchTypesParam:
  name: types
  in: query
  required: false
  description: Comma-separated list of content types to search
  schema:
    type: string
    pattern: '^[a-z]+(,[a-z]+)*$'
  examples:
    single:
      summary: Single type
      value: "memory"
    multiple:
      summary: Multiple types
      value: "memory,content,entity"

# Ragno API Parameters
RagnoEntityTypeParam:
  name: type
  in: query
  required: false
  description: Filter entities by type
  schema:
    type: string
    enum: [Person, Organization, Technology, Concept, Location, Event]
  example: "Technology"

RagnoEntityNameParam:
  name: name
  in: query
  required: false
  description: Filter entities by name (partial match)
  schema:
    type: string
    maxLength: 200
  example: "OpenAI"

RagnoOffsetParam:
  name: offset
  in: query
  required: false
  description: Number of results to skip for pagination
  schema:
    type: integer
    minimum: 0
    default: 0
  example: 20

RagnoExportFormatParam:
  name: format
  in: path
  required: true
  description: Export format for knowledge graph data
  schema:
    type: string
    enum: [turtle, ntriples, jsonld, json, rdf-xml]
  examples:
    turtle:
      summary: Turtle format
      value: "turtle"
    json:
      summary: JSON-LD format
      value: "jsonld"

# ZPT API Parameters
ZPTPreviewParam:
  name: preview
  in: query
  required: false
  description: Return navigation preview instead of full result
  schema:
    type: boolean
    default: false

# Unified Search Parameters
UnifiedSearchStrategyParam:
  name: strategy
  in: query
  required: false
  description: Search strategy to use
  schema:
    type: string
    enum: [auto, entity-focused, concept-focused, graph-focused, navigation-focused, knowledge-focused, balanced]
    default: auto
  example: "balanced"

UnifiedSearchServicesParam:
  name: services
  in: query
  required: false
  description: Comma-separated list of services to include
  schema:
    type: string
    pattern: '^[a-z-]+(,[a-z-]+)*$'
  examples:
    basic:
      summary: Basic services
      value: "memory,search"
    all:
      summary: All services
      value: "memory,ragno,search,zpt"

# Common Path Parameters
EntityIdParam:
  name: entityId
  in: path
  required: true
  description: Unique entity identifier
  schema:
    type: string
    format: uuid
  example: "a1b2c3d4-e5f6-7890-abcd-ef1234567890"

InteractionIdParam:
  name: interactionId
  in: path
  required: true
  description: Unique memory interaction identifier
  schema:
    type: string
    format: uuid
  example: "b2c3d4e5-f6g7-8901-bcde-f23456789012"

ConversationIdParam:
  name: conversationId
  in: path
  required: true
  description: Unique conversation identifier
  schema:
    type: string
    format: uuid
  example: "c3d4e5f6-g7h8-9012-cdef-g34567890123"

# Header Parameters
ApiKeyHeader:
  name: X-API-Key
  in: header
  required: true
  description: API key for authentication
  schema:
    type: string
    minLength: 8
    maxLength: 128
  example: "semem-dev-key"

ContentTypeHeader:
  name: Content-Type
  in: header
  required: true
  description: Request content type
  schema:
    type: string
    enum: [application/json]
  example: "application/json"

# Pagination Parameters
PageParam:
  name: page
  in: query
  required: false
  description: Page number for pagination (1-based)
  schema:
    type: integer
    minimum: 1
    default: 1
  example: 1

PageSizeParam:
  name: pageSize
  in: query
  required: false
  description: Number of items per page
  schema:
    type: integer
    minimum: 1
    maximum: 100
    default: 20
  example: 20

# Filtering Parameters
DateFromParam:
  name: dateFrom
  in: query
  required: false
  description: Filter results from this date (ISO 8601)
  schema:
    type: string
    format: date
  example: "2024-01-01"

DateToParam:
  name: dateTo
  in: query
  required: false
  description: Filter results to this date (ISO 8601)
  schema:
    type: string
    format: date
  example: "2024-12-31"

ConfidenceParam:
  name: confidence
  in: query
  required: false
  description: Minimum confidence score for results
  schema:
    type: number
    format: float
    minimum: 0
    maximum: 1
    default: 0.5
  example: 0.8